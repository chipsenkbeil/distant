name: CI (Windows)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tests:
    name: "Test Rust ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: windows-latest, target: x86_64-pc-windows-msvc }
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v1
      - name: Check Cargo availability
        run: cargo --version
      - uses: Vampire/setup-wsl@v1
      - name: Run distant-core tests (default features)
        run: cargo test --verbose -p distant-core
      - name: Run distant-core tests (all features)
        run: cargo test --verbose --all-features -p distant-core
      - name: Build distant-ssh2 (default features)
        run: cargo build --verbose -p distant-ssh2
      - name: Build distant-ssh2 (all features)
        run: cargo build --verbose --all-features -p distant-ssh2
      - name: Build CLI
        run: cargo build --verbose
        shell: bash
      - name: Build CLI (no default features)
        run: cargo build --verbose --no-default-features
        shell: bash
      # - uses: xpol/setup-lua@v0.3
      #   with:
      #     lua-version: "5.1.5"
      # - name: Build Lua (Lua 5.1)
      #   run: |
      #     cd ${{ github.workspace }}\distant-lua
      #     cargo build --verbose --no-default-features --features lua51
      #   shell: cmd
      #   env:
      #     LUA_INC: ${{ github.workspace }}\.lua\include
      #     LUA_LIB: ${{ github.workspace }}\.lua\lib
      #     LUA_LIB_NAME: lua
