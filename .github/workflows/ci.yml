name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-core:
    name: "[distant-core] Test Rust ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: ubuntu-latest }
          - { rust: stable, os: macos-latest }
          - { rust: stable, os: windows-latest }
          - { rust: 1.51.0, os: ubuntu-latest }
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v1
      - name: Check Cargo availability
        run: cargo --version
      - uses: Vampire/setup-wsl@v1
        if: ${{ matrix.os == 'windows-latest' }}
      - run: cargo test --verbose -p distant-core
      - run: cargo test --verbose --all-features -p distant-core

  test-cli:
    name: "[distant] Test Rust ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: ubuntu-latest }
          - { rust: stable, os: macos-latest }
          # - { rust: stable, os: windows-latest }
          - { rust: 1.51.0, os: ubuntu-latest }
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
      - name: Check Cargo availability
        run: cargo --version
      - uses: Vampire/setup-wsl@v1
        if: ${{ matrix.os == 'windows-latest' }}
      - run: cargo test --verbose

  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust (clippy)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v1
      - name: Check Cargo availability
        run: cargo --version
      - run: cargo clippy --workspace --all-targets --verbose
      - run: cargo clippy --workspace --all-targets --verbose --all-features

  rustfmt:
    name: Verify code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust (rustfmt)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - name: Check Cargo availability
        run: cargo --version
      - run: cargo fmt --all -- --check
