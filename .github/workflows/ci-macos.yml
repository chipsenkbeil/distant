name: CI (MacOS)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  tests:
    name: "Test Rust ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: macos-latest }
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v1
      - name: Check Cargo availability
        run: cargo --version
      - name: Run net tests (default features)
        run: cargo test --release --verbose -p distant-net
      - name: Run core tests (default features)
        run: cargo test --release --verbose -p distant-core
      - name: Run core tests (all features)
        run: cargo test --release --verbose --all-features -p distant-core
      - name: Run ssh2 client tests (default features)
        run: cargo test --release --verbose -p distant-ssh2 ssh2::client
      - name: Run ssh2 client tests (all features)
        run: cargo test --release --verbose --all-features -p distant-ssh2 ssh2::client
      - name: Run CLI tests
        run: cargo test --release --verbose
        shell: bash
      - name: Run CLI tests (no default features)
        run: cargo test --release --verbose --no-default-features
        shell: bash
  ssh-launch-tests:
    name: "Test ssh launch using Rust ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { rust: stable, os: macos-latest }
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v1
      - name: Check Cargo availability
        run: cargo --version
      - name: Install distant cli for use in system tests
        run: |
          cargo install --path .
          echo "DISTANT_PATH=$HOME/.cargo/bin/distant" >> $GITHUB_ENV
      - name: Run ssh2 launch tests (default features)
        run: cargo test --release --verbose -p distant-ssh2 ssh2::launched
      - name: Run ssh2 launch tests (all features)
        run: cargo test --release --verbose --all-features -p distant-ssh2 ssh2::launched
